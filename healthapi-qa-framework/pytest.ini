[tool:pytest]
# Health API QA Framework - PyTest Configuration
# Configuração centralizada para execução de testes

# Diretórios de teste
testpaths = tests

# Padrões de arquivos de teste
python_files = test_*.py *_test.py

# Padrões de classes de teste
python_classes = Test*

# Padrões de funções de teste
python_functions = test_*

# Markers personalizados
markers =
    smoke: marca testes de smoke (críticos)
    regression: marca testes de regressão
    integration: marca testes de integração
    performance: marca testes de performance
    security: marca testes de segurança
    contracts: marca testes de contrato
    negative: marca testes negativos
    boundary: marca testes de valores limite
    slow: marca testes que demoram para executar
    unit: marca testes unitários
    functional: marca testes funcionais
    api: marca testes de API
    database: marca testes que usam banco de dados
    external: marca testes que dependem de serviços externos

# Opções padrão
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10
    --color=yes
    --code-highlight=yes
    --disable-warnings
    --maxfail=5

# Configurações de cobertura
# (quando pytest-cov estiver instalado)
# addopts = 
#     --cov=api
#     --cov-report=html:docs/coverage_report/htmlcov
#     --cov-report=xml:docs/coverage_report/coverage.xml
#     --cov-report=term-missing
#     --cov-fail-under=85

# Filtros de warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::pytest.PytestUnknownMarkWarning

# Configurações de logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Configurações de arquivo de log
log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Timeout para testes (em segundos)
timeout = 300

# Configurações para testes paralelos
# (quando pytest-xdist estiver instalado)
# addopts = -n auto

# Configurações para relatórios HTML
# (quando pytest-html estiver instalado)
# addopts = --html=docs/coverage_report/test_report.html --self-contained-html

# Configurações para relatórios JSON
# (quando pytest-json-report estiver instalado)
# addopts = --json-report --json-report-file=docs/coverage_report/test_report.json

# Configurações mínimas de versão
minversion = 6.0

# Diretórios a serem ignorados
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    .venv
    venv
    env
    __pycache__
    .pytest_cache
    node_modules
    htmlcov
    .coverage

# Configurações de coleta de testes
collect_ignore = setup.py conftest.py

# Configurações de cache
cache_dir = .pytest_cache

# Configurações de sessão
console_output_style = progress

# Configurações de falhas
tb_short = true
